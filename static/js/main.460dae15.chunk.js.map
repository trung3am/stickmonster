{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","map","SearchBox","placeholder","handlechange","type","onChange","App","state","searchfield","fetch","then","response","json","users","setState","this","filteredmonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,oCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAKN,EAAMI,QAAQG,cCHfC,EAAW,SAACR,GAErB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMI,QAAQK,KAAK,SAAAL,GAAO,OACvB,cAAC,EAAD,CAA0BA,QAASA,GAAtBA,EAAQC,UCLpBK,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACAX,UAAW,SACXY,KAAK,SACLF,YAAcA,EACdG,SAAYF,MC+BDG,E,kDAjCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXZ,QAAS,GACTa,YAAY,IAJH,E,gEAOQ,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACnB,QAAUkB,S,+BAGhC,IAAD,SAC2BE,KAAKR,MAA/BZ,EADD,EACCA,QAASa,EADV,EACUA,YACXQ,EAAmBrB,EAAQsB,QAAO,SAAAtB,GAAO,OAC7CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAClD,OAEE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEU,YAAY,iBACZC,aAAgB,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAcY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU3B,QAAUqB,W,GA1BVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.460dae15.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n         <h2>  {props.monster.name} </h2>\r\n         <p> {props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const Cardlist = (props) => {\r\n\r\n    return (\r\n    <div className='card-list'>\r\n        {props.monster.map( monster => (\r\n            <Card key ={ monster.id } monster={monster} /> ))}\r\n    </div>);\r\n}\r\n","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handlechange }) => (\r\n    <input \r\n    className= 'search'\r\n    type='search' \r\n    placeholder ={placeholder} \r\n    onChange = {handlechange}\r\n  />\r\n);","import React, { Component } from 'react';\nimport './App.css';\nimport './components/card-list/card-list.component';\nimport { Cardlist } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monster: [],\n      searchfield:''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monster : users})\n    );\n  }\n  render() {\n    const { monster, searchfield  } = this.state;\n    const filteredmonsters = monster.filter(monster =>\n      monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return (\n        \n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          placeholder='search monster'\n          handlechange = {e => this.setState({searchfield : e.target.value})}\n          />\n        <Cardlist monster= {filteredmonsters} >\n\n        </Cardlist>\n    </div>\n    ) \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}